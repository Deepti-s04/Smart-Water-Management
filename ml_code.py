# -*- coding: utf-8 -*-
"""ML code.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UkoDcaFdtvd16QOv1uTD4tmXnj29o_RY
"""

import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error
import matplotlib.pyplot as plt

# Sample historical data (replace with your actual data)
# This is an example where time (in days) and corresponding water usage (liters)
data = {
    'time': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'water_usage': [50, 55, 60, 65, 70, 75, 80, 85, 90, 95]
}

# Converting to DataFrame
df = pd.DataFrame(data)

# Defining features (X) and target variable (y)
X = df[['time']]  # Features (Time in days)
y = df['water_usage']  # Target (Water usage in liters)

# Splitting data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Random Forest model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predictions on the test set
y_pred = model.predict(X_test)

# Evaluating model performance using Mean Absolute Error (MAE)
mae = mean_absolute_error(y_test, y_pred)
print(f"Mean Absolute Error: {mae:.2f} liters")

# Example: Predict water usage for the next day (day 11)
next_day = np.array([[11]])  # Predicting for day 11
predicted_water_usage = model.predict(next_day)
print(f"Predicted water usage for day 11: {predicted_water_usage[0]:.2f} liters")

# Visualizing the data and predictions
plt.figure(figsize=(8,6))
plt.scatter(X, y, color='blue', label='Actual Data')  # Plot actual data
plt.plot(X, model.predict(X), color='red', label='Prediction Line')  # Plot prediction line
plt.xlabel('Time (Days)')
plt.ylabel('Water Usage (Liters)')
plt.title('Water Usage Prediction')
plt.legend()
plt.show()